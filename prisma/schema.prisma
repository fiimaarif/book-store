// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String
  email    String   @unique
  password String
  role     String   @default("user")
  transactions Transaction[]
}

model Book {
  id       Int      @id @default(autoincrement())
  title    String
  author   String
  price    Float
  stock    Int
  image    String
  orders   OrderItem[]
  transactionDetails TransactionDetail[]
}

model Transaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  totalPrice Float
  status    String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  details   TransactionDetail[]
}

model TransactionDetail {
  id            Int      @id @default(autoincrement())
  transactionId Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  bookId        Int
  book          Book     @relation(fields: [bookId], references: [id])
  quantity      Int
  price         Float
}

model Order {
  id              Int         @id @default(autoincrement())
  customerName    String
  customerEmail   String
  customerAddress String
  totalAmount     Float
  createdAt       DateTime    @default(now())
  items           OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  bookId    Int
  quantity  Int
  totalPrice Float
  order     Order   @relation(fields: [orderId], references: [id])
  book      Book    @relation(fields: [bookId], references: [id])
}